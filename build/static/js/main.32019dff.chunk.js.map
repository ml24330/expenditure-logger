{"version":3,"sources":["media/icon.png","LoadLogs.js","Sidebar.js","Home.js","RemoveLog.js","EditLog.js","Log.js","Logs.js","AddLog.js","LogPage.js","charts/DailyCountInfo.js","charts/MonthlyCountInfo.js","charts/DailyInfo.js","charts/MonthlyInfo.js","charts/convertToAcc.js","charts/AccDailyCountInfo.js","charts/AccMonthlyCountInfo.js","charts/AccDailyInfo.js","charts/AccMonthlyInfo.js","charts/Infographic.js","PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","cookies","Cookies","LoadLogs","isOpen","children","useState","userId","setUserId","className","value","onChange","e","target","onClick","set","maxAge","window","location","reload","Sidebar","modalIsOpen","setModalIsOpen","hideId","setHideId","to","onMouseEnter","get","src","icon","alt","Home","REMOVE_LOG","gql","RemoveLogModal","log","useContext","uIdContext","useMutation","onError","console","removeLog","loading","error","data","formError","setFormError","useEffect","setTimeout","replace","href","split","title","detail","amount","date","currency","variables","id","message","EDIT_LOG","EditLogModal","newLog","setNewLog","editLog","a","persist","prevLog","style","height","type","handleSubmit","GET_LOG","Log","logID","useParams","GBPRates","setGBPRates","HKDRates","setHKDRates","deletionModalIsOpen","setDeletionModalIsOpen","editModalIsOpen","setEditModalIsOpen","useQuery","pollInterval","fetch","res","json","rates","logs","length","Object","keys","sort","slice","map","key","Math","round","GET_LOGS","Logs","filterMethod","searchKey","filteredLogs","setFilteredLogs","displayedLogs","setDisplayedLogs","modifyingLog","setModifyingLog","total","count","HKD","GBP","annual","monthly","miscStats","setMiscStats","prevLogs","b","matchingLogs","filter","match","RegExp","toString","all_count","all_HKD","reduce","prev","current","all_GBP","prevStats","annualLogs","Date","getTime","annual_count","annual_HKD","annual_GBP","monthlyLogs","monthly_count","monthly_HKD","monthly_GBP","substring","ADD_LOG","AddLog","addLog","htmlFor","name","LogPage","setFilterMethod","currencyFilter","setCurrencyFilter","setSearchKey","placeholder","GET_DAILY_INFO","DailyCountInfo","graphData","setGraphData","convertedLogs","logsByDate","item","theme","VictoryTheme","material","width","domainPadding","label","tickLabels","fontSize","axisLabel","fontWeight","padding","tickFormat","x","toLocaleDateString","dependentAxis","barWidth","fill","labels","textShadow","size","y","events","eventHandlers","onMouseOver","mutation","props","text","datum","onMouseLeave","GET_MONTHLY_INFO","DailyInfo","logsByMonth","getFullYear","getMonth","alignment","MonthlyInfo","timeSorter","convertToAccumulative","originalArray","current_HKD_total","current_GBP_total","current_count_total","GBP_amount","HKD_amount","total_GBP","total_HKD","total_count","Infographic","cumuOption","setCumuOption","PageNotFound","React","createContext","App","uuidv4","Provider","path","exact","Boolean","hostname","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.32019dff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.0846095e.png\";","import React, { useState } from 'react';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nexport default function LoadLogs({ isOpen, children }) {\n\n    const [userId, setUserId] = useState('');\n\n    return (\n        <>\n        {isOpen && (\n            <div className=\"small-modal\">\n                {children}\n                <div className=\"small-modal-title\">Enter the user ID for your desired data:</div>\n                <div className=\"small-modal-input\">\n                    <input value={userId} onChange={e => setUserId(e.target.value)}></input>\n                </div>\n                <div className=\"small-modal-submit\">\n                    <button onClick={() => { if(userId) { cookies.set('uid', userId, { maxAge: 60*60*24*365*10 }); window.location.reload() }}}>Confirm</button>\n                    <button onClick={() => { cookies.set('uid', 1, { maxAge: 60*60*24*365*10 }); window.location.reload() }}>Load sample data</button>\n                </div>\n                <div className=\"modal-form-status\">\n                </div>\n            </div>\n        )}\n    </>\n    )\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport icon from './media/icon.png';\nimport LoadLogs from './LoadLogs.js';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nexport default function Sidebar() {\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [hideId, setHideId] = useState(true);\n\n    return (\n        <div className=\"nav\">\n            <div className=\"nav-item\">\n                <Link to=\"#\" onClick={() => setModalIsOpen(true)} >Load records</Link>\n                <LoadLogs isOpen={modalIsOpen}>\n                    <button className=\"close-modal\" onClick={() => setModalIsOpen(false)}>X</button>\n                </LoadLogs>\n            </div>\n            <div className=\"nav-item\">\n                <Link to=\"/\">Home</Link>\n            </div>\n            <div className=\"nav-item\">\n                <Link to=\"/logs\">Logs</Link>\n            </div>\n            <div className=\"nav-item\">\n                <Link to=\"/info\">Infographic</Link>\n            </div>\n            <div onMouseEnter={() => setHideId(false)} className={`nav-item view-id ${!hideId && 'active'}`}>\n                {hideId ? 'Reveal ID' : cookies.get('uid')}\n            </div>\n            <div className=\"nav-icon\">\n                <img src={icon} alt=\"Free Hong Kong\" />\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport default function Home() {\n\n    return (\n        <div>\n            <div className=\"title\">Logging expenditures made easy!</div>\n            <div className=\"desc\">Welcome! To get started, go to <strong>Logs</strong> or <strong>Infographic</strong> via the navigation bar. You will be able to add, edit, remove, and have a visual overview of expenditure records! Interesting things about this application: </div>\n            <div className=\"flex-container\">\n                <div className=\"flex-item\"><div className=\"flex-title\">1.</div><div className=\"flex-content\">This application uses cookies to track your records, so please do not disable the use of cookies!</div></div>\n                <div className=\"flex-item\"><div className=\"flex-title\">2.</div><div className=\"flex-content\">Records are identified by ID. Send your ID to others if you want them to access your logs!</div></div>\n                <div className=\"flex-item\"><div className=\"flex-title\">3.</div><div className=\"flex-content\">You can load other people's data or a read-only sample by using the <code>Load records</code> function.</div></div>\n                <div className=\"flex-item\"><div className=\"flex-title\">4.</div><div className=\"flex-content\">The date field defaults to the current date if left blank.</div></div>\n                <div className=\"flex-item\"><div className=\"flex-title\">5.</div><div className=\"flex-content\">Infographics containing daily and monthly breakdowns count data from the past one and two year(s) respectively.</div></div>\n                <div className=\"flex-item\"><div className=\"flex-title\">6.</div><div className=\"flex-content\">An expenditure's worth in other currencies can be found in their details page.</div></div>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { uIdContext } from './App.js';\n\nconst REMOVE_LOG = gql`\n    mutation RootMutation($userId: String!, $id: String!) {\n        deleteLog(userId: $userId, id: $id){\n            id,\n            title,\n            detail,\n            amount,\n            currency,\n            date\n        }\n    }\n`;\n\nexport default function RemoveLogModal({ isOpen, log, children }) {\n\n    const userId = useContext(uIdContext);\n\n    const [removeLog, { loading, error, data }] = useMutation(REMOVE_LOG, {\n        onError: e => console.log(e)\n    });\n\n    const [formError, setFormError] = useState('');\n\n    useEffect(() => {\n        if(data){\n            setFormError('Log successfully removed! Redirecting...');\n            setTimeout(() => {\n                window.location.replace(`${window.location.href.split('/log/')[0]}/logs`);\n            }, 100);\n        }\n    }, [data])\n\n    function handleConfirm() {\n        removeLog({variables: { id: log.id, userId }});\n    }\n\n    return (\n        <>\n         {isOpen && (\n             <div className=\"deletion-modal\">\n                {children}\n                <div className=\"modal-title\">You are removing the following log:</div>\n                <div className=\"edit-log-container\">\n                    <div className=\"info\"><div className=\"key\">Title</div><div className=\"value\">{log.title}</div></div>\n                    <div className=\"info\"><div className=\"key\">Detail</div><div className=\"value\">{log.detail}</div></div>\n                    <div className=\"info\"><div className=\"key\">Amount</div><div className=\"value\">{log.amount}</div></div>\n                    <div className=\"info\"><div className=\"key\">Date</div><div className=\"value\">{log.date}</div></div>\n                    <div className=\"info\"><div className=\"key\">Currency</div><div className=\"value\">{log.currency}</div></div>\n                </div>\n                <div className=\"modal-submit\">\n                    <button onClick={() => handleConfirm()}>Remove</button>\n                </div> \n                <div className=\"modal-form-status\">\n                        {loading && 'Loading...'}\n                        {error && `Error: ${error.message}`}\n                        {formError}\n                </div>\n             </div>\n         )}   \n        </>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { uIdContext } from './App.js';\n\nconst EDIT_LOG = gql`\n    mutation RootMutation($userId: String!, $id: String!, $title: String!, $detail: String!, $amount: Float!, $currency: currencies!, $date: String!) {\n        editLog(userId: $userId, id: $id, title: $title, detail: $detail, amount: $amount, currency: $currency, date: $date) {\n            id,\n            title,\n            detail,\n            amount,\n            currency,\n            date\n        }\n    }\n`;\n\nexport default function EditLogModal({ isOpen, log, children }) {\n\n    const userId = useContext(uIdContext);\n\n    const [newLog, setNewLog] = useState({title: '', detail: '', amount: '', currency: 'GBP', date: ''});\n    const [formError, setFormError] = useState('');\n\n    const [editLog, { loading, error, data }] = useMutation(EDIT_LOG, {\n        onError: e => console.log(e)\n    });\n\n    useEffect(() => {\n        setNewLog(log);\n    }, [log]);\n\n    async function handleSubmit() {\n        if(newLog.title && newLog.detail && newLog.amount){\n            setFormError('');\n            const log = {...newLog, userId};\n            log.amount = +newLog.amount;\n            if(!log.date) delete log.date;\n            editLog({variables: log});\n        }else{\n            setFormError('Please fill in all required fields!');\n        }\n    }\n\n    useEffect(() => {\n        if(data){\n            setFormError('Successfully edited! Redirecting...');\n            setTimeout(() => {\n                window.location.reload();\n            }, 100);\n        }\n    }, [data]);\n\n    return (\n        <>\n            {isOpen && (\n                <div className=\"edit-modal\">\n                    {children}\n                    <div className=\"modal-title\">You are editing the following log:</div>\n                    <div className=\"edit-log-container\">\n                        <div className=\"info\"><div className=\"key\">Title</div><input className=\"value\" value={newLog.title} onChange={e => { e.persist(); setNewLog(prevLog => ({...prevLog, title: e.target.value}))}}></input></div>\n                        <div className=\"info\"><div className=\"key\">Detail</div><textarea style={{height: '16vh'}}className=\"value\" value={newLog.detail} onChange={e => { e.persist(); setNewLog(prevLog => ({...prevLog, detail: e.target.value}))}}></textarea></div>\n                        <div className=\"info\"><div className=\"key\">Amount</div><input className=\"value\" type=\"number\" value={newLog.amount} onChange={e => { e.persist(); setNewLog(prevLog => ({...prevLog, amount: e.target.value}))}}></input></div>\n                        <div className=\"info\"><div className=\"key\">Date</div><input className=\"value\" type=\"date\" value={newLog.date} onChange={e => { e.persist(); setNewLog(prevLog => ({...prevLog, date: e.target.value}))}}></input></div>\n                        <div className=\"info\"><div className=\"key\">Currency</div><select className=\"value\" value={newLog.currency} onChange={e => { e.persist(); setNewLog(prevLog => ({...prevLog, currency: e.target.value}))}}><option value=\"GBP\">GBP</option><option value=\"HKD\">HKD</option></select></div>\n                    </div>\n                    <div className=\"modal-submit\">\n                        <button onClick={() => handleSubmit()}>Confirm edit</button>\n                    </div>\n                    <div className=\"modal-form-status\">\n                        {loading && 'Loading...'}\n                        {error && `Error: ${error.message}`}\n                        {formError}\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router';\nimport { gql, useQuery } from '@apollo/client';\nimport RemoveLogModal from './RemoveLog.js';\nimport EditLogModal from './EditLog.js';\nimport { uIdContext } from './App.js';\n\nconst GET_LOG = gql`\n  query RootQuery($id: String!, $userId: String!) {\n    logs(id: $id, userId: $userId) {\n      id,\n      title,\n      detail,\n      amount,\n      currency,\n      date\n    }\n  }\n`\n\nexport default function Log() {\n\n    const userId = useContext(uIdContext);\n\n    const { logID } = useParams();\n    const [GBPRates, setGBPRates] = useState({});\n    const [HKDRates, setHKDRates] = useState({});\n\n    const [deletionModalIsOpen, setDeletionModalIsOpen] = useState(false);\n    const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n\n    const { loading, error, data } = useQuery(GET_LOG, {\n        pollInterval: 2000,\n        onError: e => console.log(e),\n        variables: {\n            id: logID,\n            userId\n        }\n    });\n\n    useEffect(() => {\n        (async function getData() {\n            let res;\n            let data;\n            res = await fetch('https://api.exchangeratesapi.io/latest?base=GBP');\n            data = await res.json();\n            setGBPRates(data.rates);\n            res = await fetch('https://api.exchangeratesapi.io/latest?base=HKD');\n            data = await res.json();\n            setHKDRates(data.rates);\n        })();\n    }, []);\n\n    if(loading) return <div className=\"single-log-detail\"><strong>Loading...</strong></div>;\n    if(error) return <div className=\"single-log-detail\"><strong>Error! {error.message}</strong></div>;\n    if(data.logs.length === 0) return <div className=\"single-log-detail\"><strong>Log not found!</strong></div>;\n\n    return (\n        <div className=\"single-log-detail\">\n            <div className=\"single-log-container\">\n                <div className=\"info\"><div className=\"key\">Title</div><div className=\"value\">{data.logs[0].title}</div></div>\n                <div className=\"info\"><div className=\"key\">Detail</div><div className=\"value\">{data.logs[0].detail}</div></div>\n                <div className=\"info\"><div className=\"key\">Amount</div><div className=\"value\">{data.logs[0].amount}</div></div>\n                <div className=\"info\"><div className=\"key\">Date</div><div className=\"value\">{data.logs[0].date}</div></div>\n                <div className=\"info\"><div className=\"key\">Currency</div><div className=\"value\">{data.logs[0].currency}</div></div>\n                <div className=\"single-log-edit\"><button onClick={() => setEditModalIsOpen(true)}>Edit</button></div>\n                <div className=\"single-log-delete\"><button onClick={() => setDeletionModalIsOpen(true)}>Remove</button></div>\n            </div>\n            <div className=\"currency-table\">\n                <table>\n                    <tbody>\n                    <tr>\n                        <td>Currency</td>\n                        <td>Amount</td>\n                    </tr>\n                    {data.logs[0].currency === 'HKD' ? Object.keys(HKDRates).sort().slice(0,16).map(currency => (\n                        <tr key={currency}>\n                            <td>{currency}</td>\n                            <td>{Math.round(HKDRates[currency] * data.logs[0].amount * 100) / 100}</td>\n                        </tr>\n                    )) : Object.keys(GBPRates).sort().slice(0,16).map(currency => (\n                        <tr key={currency}>\n                            <td>{currency}</td>\n                            <td>{Math.round(GBPRates[currency] * data.logs[0].amount * 100) / 100}</td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n                <table>\n                    <tbody>\n                    <tr>\n                        <td>Currency</td>\n                        <td>Amount</td>\n                    </tr>\n                    {data.logs[0].currency === 'HKD' ? Object.keys(HKDRates).sort().slice(16,-1).map(currency => (\n                        <tr key={currency}>\n                            <td>{currency}</td>\n                            <td>{Math.round(HKDRates[currency] * data.logs[0].amount * 100) / 100}</td>\n                        </tr>\n                    )) : Object.keys(GBPRates).sort().slice(16,-1).map(currency => (\n                        <tr key={currency}>\n                            <td>{currency}</td>\n                            <td>{Math.round(GBPRates[currency] * data.logs[0].amount * 100) / 100}</td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n            <RemoveLogModal isOpen={deletionModalIsOpen} log={data.logs[0]}>\n                <button className=\"close-modal\" onClick={() => setDeletionModalIsOpen(false)}>X</button>\n            </RemoveLogModal>\n            <EditLogModal isOpen={editModalIsOpen} log={data.logs[0]}>\n                <button className=\"close-modal\" onClick={() => setEditModalIsOpen(false)}>X</button>\n            </EditLogModal>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport RemoveLogModal from './RemoveLog.js';\nimport EditLogModal from './EditLog.js';\nimport { uIdContext } from './App.js';\n\nconst GET_LOGS = gql`\n  query RootQuery($currency: currencies, $userId: String!) {\n    logs(currency: $currency, userId: $userId) {\n      id,\n      title,\n      detail,\n      amount,\n      currency,\n      date\n    }\n  }\n`\n\nfunction isWithinMonth(date) {\n    let currentTime = new Date().getTime();\n    let time = new Date(date).getTime();\n    if(currentTime - time < (1000 * 60 * 60 * 24 * 30)){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nfunction isWithinYear(date) {\n    let currentTime = new Date().getTime();\n    let time = new Date(date).getTime();\n    if(currentTime - time < (1000 * 60 * 60 * 24 * 365)){\n        return true;\n    }else{\n        return false;\n    }\n}\n\n\nexport default function Logs({ filterMethod, currency, searchKey }) {\n\n    const userId = useContext(uIdContext);\n\n    const { loading, error, data } = useQuery(GET_LOGS, {\n        pollInterval: 1000,\n        onError: e => console.log(e),\n        variables: {\n            currency: currency || null,\n            userId\n        }\n    });\n\n    const [filteredLogs, setFilteredLogs] = useState([]);\n    const [displayedLogs, setDisplayedLogs] = useState([]);\n    const [modifyingLog, setModifyingLog] = useState({});\n    const [miscStats, setMiscStats] = useState({\n        total: {count: 0, HKD: 0, GBP: 0},\n        annual: {count: 0, HKD: 0, GBP: 0},\n        monthly: {count: 0, HKD: 0, GBP: 0}\n    });\n\n    const [deletionModalIsOpen, setDeletionModalIsOpen] = useState(false);\n    const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n\n    useEffect(() => {\n        switch(filterMethod){\n            case 'DATE_ASCENDING':\n                setFilteredLogs(prevLogs => prevLogs.slice().sort((a,b) => a.date > b.date ? 1 : -1));\n                break;\n            case 'DATE_DESCENDING':\n                setFilteredLogs(prevLogs => prevLogs.slice().sort((a,b) => a.date > b.date ? -1 : 1));\n                break;\n            case 'AMOUNT_ASCENDING':\n                setFilteredLogs(prevLogs => prevLogs.slice().sort((a,b) => a.amount > b.amount ? 1 : -1));\n                break;\n            case 'AMOUNT_DESCENDING':\n                setFilteredLogs(prevLogs => prevLogs.slice().sort((a,b) => a.amount > b.amount ? -1 : 1));\n                break;\n            default:\n                break;\n        }\n    }, [filterMethod]);\n\n    useEffect(() => {\n        if(filteredLogs){\n            let matchingLogs = filteredLogs.filter(log => (log.title.match(new RegExp(searchKey, 'i')) || log.detail.match(new RegExp(searchKey, 'i')) || log.date.match(new RegExp(searchKey, 'i')) || log.amount.toString().match(new RegExp(searchKey, 'i'))));\n            setDisplayedLogs(matchingLogs);\n\n            // All selected\n            let all_count = matchingLogs.length;\n            let all_HKD = matchingLogs.filter(log => log.currency === 'HKD').reduce((prev, current) => {\n                return {amount: prev.amount + current.amount};\n            }, {amount: 0}).amount;\n            let all_GBP = matchingLogs.filter(log => log.currency === 'GBP').reduce((prev, current) => {\n                return {amount: prev.amount + current.amount};\n            }, {amount: 0}).amount;\n            setMiscStats(prevStats => ({...prevStats, total: {count: all_count, HKD: all_HKD, GBP: all_GBP}}));\n\n            // Selected within a year\n            let annualLogs = matchingLogs.filter(log => isWithinYear(log.date));\n            let annual_count = annualLogs.length;\n            let annual_HKD = annualLogs.filter(log => log.currency === 'HKD').reduce((prev, current) => {\n                return {amount: prev.amount + current.amount};\n            }, {amount: 0}).amount;\n            let annual_GBP = annualLogs.filter(log => log.currency === 'GBP').reduce((prev, current) => {\n                return {amount: prev.amount + current.amount};\n            }, {amount: 0}).amount;\n            setMiscStats(prevStats => ({...prevStats, annual: {count: annual_count, HKD: annual_HKD, GBP: annual_GBP}}));\n\n            // Selected within a month\n            let monthlyLogs = matchingLogs.filter(log => isWithinMonth(log.date));\n            let monthly_count = monthlyLogs.length;\n            let monthly_HKD = monthlyLogs.filter(log => log.currency === 'HKD').reduce((prev, current) => {\n                return {amount: prev.amount + current.amount};\n            }, {amount: 0}).amount;\n            let monthly_GBP = monthlyLogs.filter(log => log.currency === 'GBP').reduce((prev, current) => {\n                return {amount: prev.amount + current.amount};\n            }, {amount: 0}).amount;\n            setMiscStats(prevStats => ({...prevStats, monthly: {count: monthly_count, HKD: monthly_HKD, GBP: monthly_GBP}}));\n        }\n    }, [searchKey, filteredLogs]);\n\n    useEffect(() => {\n        if(data) setFilteredLogs(data.logs);\n    }, [data]);\n\n    if(loading) return <div className=\"log-container\"><strong>Loading...</strong></div>\n    if(error) return <div className=\"log-container\"><strong>Error! {error.message}</strong></div>;\n\n    return (\n        <div className=\"log-container\">\n            <div className=\"log\">\n                <div className=\"log-title\">Title</div>\n                <div className=\"log-date\">Date</div>\n                <div className=\"log-detail\">Detail</div>\n                <div className=\"log-amount\">Amount</div>\n            </div>\n            {displayedLogs.map(log => (\n                <div className=\"log\" key={log.id}>\n                    <div className=\"log-title\">{log.title.length > 11 ? `${log.title.substring(0,9)}...` : log.title}</div>\n                    <div className=\"log-date\">{log.date}</div>\n                    <div className=\"log-detail\">{log.detail.length > 29 ? `${log.detail.substring(0,27)}...` : log.detail}</div>\n                    <div className=\"log-amount\">{log.amount} {log.currency}</div>\n                    <div className=\"log-edit\"><Link to=\"#\" onClick={() => { setEditModalIsOpen(true);setModifyingLog(log); }}>Edit</Link></div>\n                    <div className=\"log-remove\"><Link to=\"#\" onClick={() => { setDeletionModalIsOpen(true);setModifyingLog(log); }}>Remove</Link></div>\n                    <div className=\"log-details\"><Link to={`/log/${log.id}`}>Details</Link></div>\n                </div>\n            ))}\n            {displayedLogs.length === 0 && (\n                <div>\n                    <strong>No matching logs found!</strong>\n                </div>\n            )}\n            <div className=\"misc-stats\">\n                <div>\n                    <div className=\"item\"><strong>Total logs</strong></div>\n                    <div className=\"item\">Number of logs: {miscStats.total.count}</div>\n                    <div className=\"item\">Total HKD: {Math.round(miscStats.total.HKD * 100)/100}</div>\n                    <div className=\"item\">Total GBP: {Math.round(miscStats.total.GBP * 100)/100}</div>\n                </div>\n                <div>\n                    <div className=\"item\"><strong>Logs this month</strong></div>\n                    <div className=\"item\">Number of logs: {miscStats.monthly.count}</div>\n                    <div className=\"item\">Total HKD: {Math.round(miscStats.monthly.HKD * 100)/100}</div>\n                    <div className=\"item\">Total GBP: {Math.round(miscStats.monthly.GBP * 100)/100}</div>\n                </div>\n                <div>\n                    <div className=\"item\"><strong>Logs this year</strong></div>\n                    <div className=\"item\">Number of logs: {miscStats.annual.count}</div>\n                    <div className=\"item\">Total HKD: {Math.round(miscStats.annual.HKD * 100)/100}</div>\n                    <div className=\"item\">Total GBP: {Math.round(miscStats.annual.GBP * 100)/100}</div>   \n                </div>\n            </div>\n            <RemoveLogModal isOpen={deletionModalIsOpen} log={modifyingLog}>\n                <button className=\"close-modal\" onClick={() => setDeletionModalIsOpen(false)}>X</button>\n            </RemoveLogModal>\n            <EditLogModal isOpen={editModalIsOpen} log={modifyingLog}>\n                <button className=\"close-modal\" onClick={() => setEditModalIsOpen(false)}>X</button>\n            </EditLogModal>\n        </div>\n    )\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { uIdContext } from './App.js';\n\nconst ADD_LOG = gql`\n    mutation RootMutation($userId: String!, $title: String!, $detail: String!, $amount: Float!, $currency: currencies!, $date: String) {\n        addLog(userId: $userId, title: $title, detail: $detail, amount: $amount, currency: $currency, date: $date) {\n            id,\n            title,\n            detail,\n            amount,\n            currency,\n            date\n        }\n    }\n`;\n\nexport default function AddLog() {\n\n    const [addLog, { loading, error }] = useMutation(ADD_LOG, {\n        onError: e => console.log(e)\n    });\n\n    const userId = useContext(uIdContext);\n\n    const [newLog, setNewLog] = useState({title: '', detail: '', amount: '', currency: 'GBP', date: ''});\n    const [formError, setFormError] = useState('');\n\n    function handleSubmit() {\n        if(newLog.title && newLog.detail && newLog.amount){\n            setFormError('');\n            const log = {...newLog, userId};\n            console.log(log);\n            log.amount = +newLog.amount;\n            if(!log.date) delete log.date;\n            addLog({variables: log});\n        }else{\n            setFormError('Please fill in all required fields!');\n        }\n    }\n\n    return (\n        <div className=\"add-log\">\n            <div className=\"add-log-form\">\n                <div>\n                <div>\n                    <label htmlFor=\"title\">Title*</label>\n                    <input value={newLog.title} name=\"title\" type=\"text\" onChange={e => {e.persist(); setNewLog(prev => ({...prev, title: e.target.value}))}}></input>\n                </div>\n                <div>\n                    <label htmlFor=\"detail\">Detail*</label>\n                    <input value={newLog.detail} name=\"detail\" type=\"text\" onChange={e => {e.persist(); setNewLog(prev => ({...prev, detail: e.target.value}))}}></input>\n                </div>\n                <div>\n                    <label htmlFor=\"amount\">Amount*</label>\n                    <input value={newLog.amount} name=\"amount\" type=\"number\" onChange={e => {e.persist(); setNewLog(prev => ({...prev, amount: +e.target.value}))}}></input>\n                </div>\n                </div>\n                <div>\n                <div> \n                    <label htmlFor=\"currency\">Currency</label>\n                    <select value={newLog.currency} name=\"currency\" onChange={e => {e.persist(); setNewLog(prev => ({...prev, currency: e.target.value}))}}>\n                        <option name=\"GBP\">GBP</option>\n                        <option name=\"HKD\">HKD</option>\n                    </select>\n                </div>\n                <div>\n                    <label htmlFor=\"date\">Date</label>\n                    <input value={newLog.date} name=\"date\" type=\"date\" onChange={e => {e.persist(); setNewLog(prev => ({...prev, date: e.target.value}))}}></input>\n                </div>\n                <div><button type=\"submit\" onClick={handleSubmit}>Add Log</button></div>\n                </div>\n            </div>\n            <div className=\"error-message\">\n                {loading && 'Loading...'}\n                {error && `Error: ${error.message}`}\n                {formError}\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport Logs from './Logs.js';\nimport AddLog from './AddLog.js';\n\nexport default function LogPage() {\n\n    const [filterMethod, setFilterMethod] = useState('DATE_ASCENDING');\n    const [currencyFilter, setCurrencyFilter] = useState();\n    const [searchKey, setSearchKey] = useState('');\n\n    return (\n        <div>\n            <div>\n                <select className=\"filter-select\" value={filterMethod} onChange={e => setFilterMethod(e.target.value)}>\n                    <option value=\"DATE_ASCENDING\">Date ascending</option>\n                    <option value=\"DATE_DESCENDING\">Date descending</option>\n                    <option value=\"AMOUNT_ASCENDING\">Amount ascending</option>\n                    <option value=\"AMOUNT_DESCENDING\">Amount descending</option>\n                </select>\n                <select className=\"filter-select\" value={currencyFilter} onChange={e => setCurrencyFilter(e.target.value)}>\n                    <option value=\"\">All currencies</option>\n                    <option value=\"HKD\">HKD only</option>\n                    <option value=\"GBP\">GBP only</option>\n                </select>\n                <input className=\"search\" placeholder=\"Search logs..\" value={searchKey} onChange={e => setSearchKey(e.target.value)}></input>\n            </div>\n            <AddLog />\n            <Logs filterMethod={filterMethod} currency={currencyFilter} searchKey={searchKey} />\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\nimport { uIdContext } from '../App.js';\n\nconst GET_DAILY_INFO = gql`\n    query RootQuery($userId: String!) {\n        logsByDate(userId: $userId) {\n            date,\n            GBP_amount,\n            HKD_amount,\n            count\n        }\n    }\n`;\n\nexport default function DailyCountInfo() {\n\n    const userId = useContext(uIdContext);\n\n    const [graphData, setGraphData] = useState();\n\n    const { data, loading, error } = useQuery(GET_DAILY_INFO, {\n        pollInterval: 5000,\n        onError: e => console.log(e),\n        variables: { userId }\n    });\n\n    useEffect(() => {\n        if(data){\n            let convertedLogs = data.logsByDate.map(item => ({...item, date: new Date(item.date).getTime()}));\n            setGraphData(convertedLogs);\n        }\n    }, [data]);\n\n    if(loading || !graphData) return <div className=\"chart\">Loading...</div>;\n    if(error) return <div className=\"chart\">Error: {error.message}</div>;\n\n    return (\n        <div className=\"chart\">\n            <div className=\"chart-title\">\n              Log count per day\n            </div>\n            <VictoryChart theme={VictoryTheme.material} height={300} width={400} domainPadding={20}>\n                <VictoryAxis label=\"Date (DD/MM)\" style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 26}}} tickFormat={(x) => new Date(x).toLocaleDateString().slice(0,-5)}/>\n                <VictoryAxis label=\"Number of logs\" style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 26}}} tickFormat={(x) => x % 1 === 0 ? x : \"\"} dependentAxis />\n                <VictoryBar barWidth={2} style={{ data: { fill: 'darkblue' }, labels: { textShadow: '1px 1px white', fontWeight: 'bold' }}} labels={() => \"\"} size={3} x=\"date\" y=\"count\" \n                events={[{\n                    target: \"data\",\n                    eventHandlers: {\n                      onMouseOver: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: (props) => {\n                              return { style: { fill: \"black\" } };\n                            }\n                          }, {\n                            target: \"labels\",\n                            mutation: (props) => {\n                              return {text: `${new Date(props.datum.date).toLocaleDateString()} ${props.datum.count} ${props.datum.count < 2 ? 'log' : 'logs'}`}\n                            }\n                          }\n                        ];\n                      },\n                      onMouseLeave: () => {\n                          return [\n                            {\n                                target: \"data\",\n                                mutation: (props) => {\n                                  return null;\n                                }\n                              }, {\n                                target: \"labels\",\n                                mutation: (props) => {\n                                  return {text: ''}\n                                }\n                              }\n                          ]\n                      }\n                    }\n                  }]} data={graphData} />\n            </VictoryChart>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\nimport { uIdContext } from '../App.js'\n\nconst GET_MONTHLY_INFO = gql`\n    query RootQuery($userId: String!) {\n        logsByMonth(userId: $userId) {\n            date,\n            GBP_amount,\n            HKD_amount,\n            count\n        }\n    }\n`;\n\nexport default function DailyInfo() {\n\n    const userId = useContext(uIdContext);\n\n    const [graphData, setGraphData] = useState();\n\n    const { data, loading, error } = useQuery(GET_MONTHLY_INFO, {\n        pollInterval: 5000,\n        onError: e => console.log(e),\n        variables: { userId }\n    });\n\n    useEffect(() => {\n        if(data){\n            let convertedLogs = data.logsByMonth.map(item => ({...item, date: new Date(`${item.date}-01`).getTime()}));\n            setGraphData(convertedLogs);\n        }\n    }, [data]);\n\n    if(loading || !graphData) return <div className=\"chart\">Loading...</div>;\n    if(error) return <div className=\"chart\">Error: {error.message}</div>;\n\n    return (\n        <div className=\"chart\">\n            <div className=\"chart-title\">\n              Log count per month\n            </div>\n            <VictoryChart theme={VictoryTheme.material} height={300} width={400} domainPadding={20}>\n                <VictoryAxis label=\"Date (YYYY/MM)\" style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 26}}} tickFormat={(x) => `${new Date(x).getFullYear()}/${new Date(x).getMonth() + 1}`}/>\n                <VictoryAxis label=\"Number of logs\" style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 26}}} tickFormat={(x) => x % 1 === 0 ? x : \"\"} dependentAxis />\n                <VictoryBar alignment=\"start\" barWidth={9} style={{ data: { fill: 'darkgreen' }, labels: { textShadow: '1px 1px white', fontWeight: 'bold' } }} labels={() => \"\"} size={3} x=\"date\" y=\"count\" \n                events={[{\n                    target: \"data\",\n                    eventHandlers: {\n                      onMouseOver: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: (props) => {\n                              return { style: { fill: \"black\" } };\n                            }\n                          }, {\n                            target: \"labels\",\n                            mutation: (props) => {\n                              return {text: `${new Date(props.datum.date).getFullYear()}/${new Date(props.datum.date).getMonth() + 1} ${props.datum.count} ${props.datum.count < 2 ? 'log' : 'logs'}`}\n                            }\n                          }\n                        ];\n                      },\n                      onMouseLeave: () => {\n                          return [\n                            {\n                                target: \"data\",\n                                mutation: (props) => {\n                                  return null;\n                                }\n                              }, {\n                                target: \"labels\",\n                                mutation: (props) => {\n                                  return {text: ''}\n                                }\n                              }\n                          ]\n                      }\n                    }\n                  }]} data={graphData} />\n            </VictoryChart>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\nimport { uIdContext } from '../App.js';\n\nconst GET_DAILY_INFO = gql`\n    query RootQuery($userId: String!) {\n        logsByDate(userId: $userId) {\n            date,\n            GBP_amount,\n            HKD_amount,\n            count\n        }\n    }\n`;\n\nexport default function DailyInfo({ currency }) {\n\n    const userId = useContext(uIdContext);\n\n    const [graphData, setGraphData] = useState();\n\n    const { data, loading, error } = useQuery(GET_DAILY_INFO, {\n        pollInterval: 5000,\n        onError: e => console.log(e),\n        variables: { userId }\n    });\n\n    useEffect(() => {\n        if(data){\n            let convertedLogs = data.logsByDate.map(item => ({...item, date: new Date(item.date).getTime()}));\n            setGraphData(convertedLogs);\n        }\n    }, [data]);\n\n    if(loading || !graphData) return <div className=\"chart\">Loading...</div>;\n    if(error) return <div className=\"chart\">Error: {error.message}</div>;\n\n    return (\n        <div className=\"chart\">\n            <div className=\"chart-title\">\n              {currency} spent per day\n            </div>\n            <VictoryChart theme={VictoryTheme.material} height={300} width={400} domainPadding={20}>\n                <VictoryAxis label=\"Date (DD/MM)\" style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 26}}} tickFormat={(x) => new Date(x).toLocaleDateString().slice(0,-5)}/>\n                <VictoryAxis label={`${currency} spent`} style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 35}}} dependentAxis tickFormat={(x) => x % 1 === 0 ? x/1000 % 1 === 0 ? `${x.toString().slice(0,-3)}K` : x : \"\"} />\n                <VictoryBar barWidth={2} style={{ data: { fill: 'darkblue' }, labels: { textShadow: '1px 1px white', fontWeight: 'bold' }}} labels={() => \"\"} size={3} x=\"date\" y={`${currency}_amount`}\n                events={[{\n                    target: \"data\",\n                    eventHandlers: {\n                      onMouseOver: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: (props) => {\n                              return { style: { fill: \"black\" } };\n                            }\n                          }, {\n                            target: \"labels\",\n                            mutation: (props) => {\n                              return {text: `${new Date(props.datum.date).toLocaleDateString()} ${props.datum[`${currency}_amount`]}${currency}`}\n                            }\n                          }\n                        ];\n                      },\n                      onMouseLeave: () => {\n                          return [\n                            {\n                                target: \"data\",\n                                mutation: (props) => {\n                                  return null;\n                                }\n                              }, {\n                                target: \"labels\",\n                                mutation: (props) => {\n                                  return {text: ''}\n                                }\n                              }\n                          ]\n                      }\n                    }\n                  }]} data={graphData} />\n            </VictoryChart>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\nimport { uIdContext } from '../App.js';\n\nconst GET_DAILY_INFO = gql`\n    query RootQuery($userId: String!) {\n        logsByMonth(userId: $userId) {\n            date,\n            GBP_amount,\n            HKD_amount,\n            count\n        }\n    }\n`;\n\nexport default function MonthlyInfo({ currency }) {\n\n    const userId = useContext(uIdContext);\n\n    const [graphData, setGraphData] = useState();\n\n    const { data, loading, error } = useQuery(GET_DAILY_INFO, {\n        pollInterval: 5000,\n        onError: e => console.log(e),\n        variables: { userId }\n    });\n\n    useEffect(() => {\n        if(data){\n            let convertedLogs = data.logsByMonth.map(item => ({...item, date: new Date(item.date).getTime()}));\n            setGraphData(convertedLogs);\n        }\n    }, [data]);\n\n    if(loading || !graphData) return <div className=\"chart\">Loading...</div>;\n    if(error) return <div className=\"chart\">Error: {error.message}</div>;\n\n    return (\n        <div className=\"chart\">\n            <div className=\"chart-title\">\n              {currency} spent per month\n            </div>\n            <VictoryChart theme={VictoryTheme.material} height={300} width={400} domainPadding={20}>\n                <VictoryAxis label=\"Date (YYYY/MM)\" style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 26}}} tickFormat={(x) => `${new Date(x).getFullYear()}/${new Date(x).getMonth() + 1}`}/>\n                <VictoryAxis label={`${currency} spent`} style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 35}}} dependentAxis tickFormat={(x) => x % 1 === 0 ? x/1000 % 1 === 0 ? `${x.toString().slice(0,-3)}K` : x : \"\"} />\n                <VictoryBar alignment=\"start\" barWidth={9} style={{ data: { fill: 'darkgreen' }, labels: { textShadow: '1px 1px white', fontWeight: 'bold' }}} labels={() => \"\"} size={3} x=\"date\" y={`${currency}_amount`}\n                events={[{\n                    target: \"data\",\n                    eventHandlers: {\n                      onMouseOver: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: (props) => {\n                              return { style: { fill: \"black\" } };\n                            }\n                          }, {\n                            target: \"labels\",\n                            mutation: (props) => {\n                              return {text: `${new Date(props.datum.date).getFullYear()}/${new Date(props.datum.date).getMonth() + 1} ${props.datum[`${currency}_amount`]}${currency}`}\n                            }\n                          }\n                        ];\n                      },\n                      onMouseLeave: () => {\n                          return [\n                            {\n                                target: \"data\",\n                                mutation: (props) => {\n                                  return null;\n                                }\n                              }, {\n                                target: \"labels\",\n                                mutation: (props) => {\n                                  return {text: ''}\n                                }\n                              }\n                          ]\n                      }\n                    }\n                  }]} data={graphData} />\n            </VictoryChart>\n        </div>\n    )\n}\n","function timeSorter(a, b) {\n    return new Date(a.date).getTime() < new Date(b.date).getTime() ? -1 : 1\n  }\n  \nexport default function convertToAccumulative(originalArray) {\n    // Sort array by date\n    originalArray.sort(timeSorter);\n  \n    let current_HKD_total = 0;\n    let current_GBP_total = 0;\n    let current_count_total = 0;\n    let newArray = originalArray.map(item => {\n        current_GBP_total += item.GBP_amount;\n        current_HKD_total += item.HKD_amount;\n        current_count_total += item.count;\n        return ({...item, total_GBP: current_GBP_total, total_HKD: current_HKD_total, total_count: current_count_total});\n    });\n  \n    return newArray;\n}","import React, { useState, useEffect, useContext } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { VictoryScatter, VictoryChart, VictoryLine, VictoryAxis, VictoryTheme } from 'victory';\nimport convertToAccumulative from './convertToAcc.js';\nimport { uIdContext } from '../App.js';\n\nconst GET_DAILY_INFO = gql`\n    query RootQuery($userId: String!) {\n        logsByDate(userId: $userId) {\n            date,\n            GBP_amount,\n            HKD_amount,\n            count\n        }\n    }\n`;\n\nexport default function DailyCountInfo() {\n\n    const userId = useContext(uIdContext);\n\n    const [graphData, setGraphData] = useState();\n\n    const { data, loading, error } = useQuery(GET_DAILY_INFO, {\n        pollInterval: 5000,\n        onError: e => console.log(e),\n        variables: { userId }\n    });\n\n    useEffect(() => {\n        if(data){\n            let convertedLogs = convertToAccumulative(data.logsByDate.slice()).map(item => ({...item, date: new Date(item.date).getTime()}));\n            setGraphData(convertedLogs);\n        }\n    }, [data]);\n\n    if(loading || !graphData) return <div className=\"chart\">Loading...</div>;\n    if(error) return <div className=\"chart\">Error: {error.message}</div>;\n\n    return (\n        <div className=\"chart\">\n          <div className=\"chart-title\">\n              Accumulated log count (daily)\n            </div>\n            <VictoryChart theme={VictoryTheme.material} height={300} width={400} domainPadding={20}>\n                <VictoryAxis label=\"Date (DD/MM)\" style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 26}}} tickFormat={(x) => new Date(x).toLocaleDateString().slice(0,-5)}/>\n                <VictoryAxis label=\"Number of logs\" style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 26}}} tickFormat={(x) => x % 1 === 0 ? x : \"\"} dependentAxis />\n                <VictoryScatter style={{ data: { fill: 'darkblue' }, labels: { textShadow: '1px 1px white', fontWeight: 'bold' }}} labels={() => \"\"} size={3} x=\"date\" y=\"total_count\" \n                events={[{\n                    target: \"data\",\n                    eventHandlers: {\n                      onMouseOver: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: (props) => {\n                              return { style: { fill: \"black\" } };\n                            }\n                          }, {\n                            target: \"labels\",\n                            mutation: (props) => {\n                              return {text: `${new Date(props.datum.date).toLocaleDateString()} ${props.datum.total_count} ${props.datum.total_count < 2 ? 'log' : 'logs'}`}\n                            }\n                          }\n                        ];\n                      },\n                      onMouseLeave: () => {\n                          return [\n                            {\n                                target: \"data\",\n                                mutation: (props) => {\n                                  return null;\n                                }\n                              }, {\n                                target: \"labels\",\n                                mutation: (props) => {\n                                  return {text: ''}\n                                }\n                              }\n                          ]\n                      }\n                    }\n                  }]} data={graphData} />\n            </VictoryChart>\n            <div className=\"pseudo-chart\">\n            <VictoryChart theme={VictoryTheme.material} height={300} width={400} domainPadding={20}>\n                <VictoryAxis style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 26}}} tickFormat={(x) => \"\"}/>\n                <VictoryAxis style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 35}}} dependentAxis tickFormat={(x) => \"\"} />\n                <VictoryLine style={{ labels: { textShadow: '1px 1px white', fontWeight: 'bold' }}} labels={() => \"\"} size={3} x=\"date\" y={'total_count'} data={graphData} />\n            </VictoryChart>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { VictoryScatter, VictoryLine, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\nimport convertToAccumulative from './convertToAcc.js';\nimport { uIdContext } from '../App.js';\n\nconst GET_MONTHLY_INFO = gql`\n    query RootQuery($userId: String!) {\n        logsByMonth(userId: $userId) {\n            date,\n            GBP_amount,\n            HKD_amount,\n            count\n        }\n    }\n`;\n\nexport default function DailyInfo() {\n\n    const userId = useContext(uIdContext);\n\n    const [graphData, setGraphData] = useState();\n\n    const { data, loading, error } = useQuery(GET_MONTHLY_INFO, {\n        pollInterval: 5000,\n        onError: e => console.log(e),\n        variables: { userId }\n    });\n\n    useEffect(() => {\n        if(data){\n            let convertedLogs = convertToAccumulative(data.logsByMonth.slice()).map(item => ({...item, date: new Date(`${item.date}-01`).getTime()}));\n            setGraphData(convertedLogs);\n        }\n    }, [data]);\n\n    if(loading || !graphData) return <div className=\"chart\">Loading...</div>;\n    if(error) return <div className=\"chart\">Error: {error.message}</div>;\n\n    return (\n        <div className=\"chart\">\n          <div className=\"chart-title\">\n              Accumulated log count (monthly)\n            </div>\n            <VictoryChart theme={VictoryTheme.material} height={300} width={400} domainPadding={20}>\n                <VictoryAxis label=\"Date (YYYY/MM)\" style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 26}}} tickFormat={(x) => `${new Date(x).getFullYear()}/${new Date(x).getMonth() + 1}`}/>\n                <VictoryAxis label=\"Number of logs\" style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 26}}} tickFormat={(x) => x % 1 === 0 ? x : \"\"} dependentAxis />\n                <VictoryScatter alignment=\"start\" style={{ data: { fill: 'darkgreen' }, labels: { textShadow: '1px 1px white', fontWeight: 'bold' } }} labels={() => \"\"} size={3} x=\"date\" y=\"total_count\" \n                events={[{\n                    target: \"data\",\n                    eventHandlers: {\n                      onMouseOver: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: (props) => {\n                              return { style: { fill: \"black\" } };\n                            }\n                          }, {\n                            target: \"labels\",\n                            mutation: (props) => {\n                              return {text: `${new Date(props.datum.date).getFullYear()}/${new Date(props.datum.date).getMonth() + 1} ${props.datum.total_count} ${props.datum.total_count < 2 ? 'log' : 'logs'}`}\n                            }\n                          }\n                        ];\n                      },\n                      onMouseLeave: () => {\n                          return [\n                            {\n                                target: \"data\",\n                                mutation: (props) => {\n                                  return null;\n                                }\n                              }, {\n                                target: \"labels\",\n                                mutation: (props) => {\n                                  return {text: ''}\n                                }\n                              }\n                          ]\n                      }\n                    }\n                  }]} data={graphData} />\n            </VictoryChart>\n            <div className=\"pseudo-chart\">\n            <VictoryChart theme={VictoryTheme.material} height={300} width={400} domainPadding={20}>\n                <VictoryAxis style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 26}}} tickFormat={(x) => \"\"}/>\n                <VictoryAxis style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 35}}} dependentAxis tickFormat={(x) => \"\"} />\n                <VictoryLine style={{ labels: { textShadow: '1px 1px white', fontWeight: 'bold' }}} labels={() => \"\"} size={3} x=\"date\" y={'total_count'} data={graphData} />\n            </VictoryChart>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { VictoryScatter, VictoryLine, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\nimport convertToAccumulative from './convertToAcc.js';\nimport { uIdContext } from '../App.js';\n\nconst GET_DAILY_INFO = gql`\n    query RootQuery($userId: String!) {\n        logsByDate(userId: $userId) {\n            date,\n            GBP_amount,\n            HKD_amount,\n            count\n        }\n    }\n`;\n\nexport default function DailyInfo({ currency }) {\n\n    const userId = useContext(uIdContext);\n\n    const [graphData, setGraphData] = useState();\n\n    const { data, loading, error } = useQuery(GET_DAILY_INFO, {\n        pollInterval: 5000,\n        onError: e => console.log(e),\n        variables: { userId }\n    });\n\n    useEffect(() => {\n        if(data){\n            let convertedLogs = convertToAccumulative(data.logsByDate.slice()).map(item => ({...item, date: new Date(item.date).getTime()}));\n            setGraphData(convertedLogs);\n        }\n    }, [data]);\n\n    if(loading || !graphData) return <div className=\"chart\">Loading...</div>;\n    if(error) return <div className=\"chart\">Error: {error.message}</div>;\n\n    return (\n        <div className=\"chart\">\n            <div className=\"chart-title\">\n              Accumulated {currency} spent (daily)\n            </div>\n            <VictoryChart theme={VictoryTheme.material} height={300} width={400} domainPadding={20}>\n                <VictoryAxis label=\"Date (DD/MM)\" style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 26}}} tickFormat={(x) => new Date(x).toLocaleDateString().slice(0,-5)}/>\n                <VictoryAxis label={`${currency} spent`} style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 35}}} dependentAxis tickFormat={(x) => x/1000 % 1 === 0 ? `${x.toString().slice(0,-3)}K` : x} />\n                <VictoryScatter style={{ data: { fill: 'darkblue' }, labels: { textShadow: '1px 1px white', fontWeight: 'bold' }}} labels={() => \"\"} size={3} x=\"date\" y={`total_${currency}`}\n                events={[{\n                    target: \"data\",\n                    eventHandlers: {\n                      onMouseOver: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: (props) => {\n                              return { style: { fill: \"black\" } };\n                            }\n                          }, {\n                            target: \"labels\",\n                            mutation: (props) => {\n                              return {text: `${new Date(props.datum.date).toLocaleDateString()} ${props.datum[`total_${currency}`]}${currency}`}\n                            }\n                          }\n                        ];\n                      },\n                      onMouseLeave: () => {\n                          return [\n                            {\n                                target: \"data\",\n                                mutation: (props) => {\n                                  return null;\n                                }\n                              }, {\n                                target: \"labels\",\n                                mutation: (props) => {\n                                  return {text: ''}\n                                }\n                              }\n                          ]\n                      }\n                    }\n                  }]} data={graphData} />\n            </VictoryChart>\n            <div className=\"pseudo-chart\">\n            <VictoryChart theme={VictoryTheme.material} height={300} width={400} domainPadding={20}>\n                <VictoryAxis style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 26}}} tickFormat={(x) => \"\"}/>\n                <VictoryAxis style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 35}}} dependentAxis tickFormat={(x) => \"\"} />\n                <VictoryLine style={{ labels: { textShadow: '1px 1px white', fontWeight: 'bold' }}} labels={() => \"\"} size={3} x=\"date\" y={`total_${currency}`} data={graphData} />\n            </VictoryChart>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { VictoryScatter, VictoryChart, VictoryLine, VictoryAxis, VictoryTheme } from 'victory';\nimport convertToAccumulative from './convertToAcc.js';\nimport { uIdContext } from '../App.js';\n\nconst GET_DAILY_INFO = gql`\n    query RootQuery($userId: String!) {\n        logsByMonth(userId: $userId) {\n            date,\n            GBP_amount,\n            HKD_amount,\n            count\n        }\n    }\n`;\n\nexport default function MonthlyInfo({ currency }) {\n\n    const userId = useContext(uIdContext);\n\n    const [graphData, setGraphData] = useState();\n\n    const { data, loading, error } = useQuery(GET_DAILY_INFO, {\n        pollInterval: 5000,\n        onError: e => console.log(e),\n        variables: { userId }\n    });\n\n    useEffect(() => {\n        if(data){\n            let convertedLogs = convertToAccumulative(data.logsByMonth.slice()).map(item => ({...item, date: new Date(item.date).getTime()}));\n            setGraphData(convertedLogs);\n        }\n    }, [data]);\n\n    if(loading || !graphData) return <div className=\"chart\">Loading...</div>;\n    if(error) return <div className=\"chart\">Error: {error.message}</div>;\n\n    console.log(data);\n\n    return (\n        <div className=\"chart\">\n          <div className=\"chart-title\">\n              Accumulated {currency} spent (monthly)\n            </div>\n            <VictoryChart theme={VictoryTheme.material} height={300} width={400} domainPadding={20}>\n                <VictoryAxis label=\"Date (YYYY/MM)\" style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 26}}} tickFormat={(x) => `${new Date(x).getFullYear()}/${new Date(x).getMonth() + 1}`}/>\n                <VictoryAxis label={`${currency} spent`} style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 35}}} dependentAxis tickFormat={(x) => x % 1 === 0 ? x/1000 % 1 === 0 ? `${x.toString().slice(0,-3)}K` : x : \"\"} />\n                <VictoryScatter style={{ data: { fill: 'darkgreen' }, labels: { textShadow: '1px 1px white', fontWeight: 'bold' }}} labels={() => \"\"} size={3} x=\"date\" y={`total_${currency}`}\n                events={[{\n                    target: \"data\",\n                    eventHandlers: {\n                      onMouseOver: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: (props) => {\n                              return { style: { fill: \"black\" } };\n                            }\n                          }, {\n                            target: \"labels\",\n                            mutation: (props) => {\n                              return {text: `${new Date(props.datum.date).getFullYear()}/${new Date(props.datum.date).getMonth() + 1} ${props.datum[`total_${currency}`]}${currency}`}\n                            }\n                          }\n                        ];\n                      },\n                      onMouseLeave: () => {\n                          return [\n                            {\n                                target: \"data\",\n                                mutation: (props) => {\n                                  return null;\n                                }\n                              }, {\n                                target: \"labels\",\n                                mutation: (props) => {\n                                  return {text: ''}\n                                }\n                              }\n                          ]\n                      }\n                    }\n                  }]} data={graphData} />\n            </VictoryChart>\n            <div className=\"pseudo-chart\">\n            <VictoryChart theme={VictoryTheme.material} height={300} width={400} domainPadding={20}>\n                <VictoryAxis style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 26}}} tickFormat={(x) => \"\"}/>\n                <VictoryAxis style={{tickLabels: {fontSize: 10}, axisLabel: {fontSize: 13, fontWeight: 'bold', padding: 35}}} dependentAxis tickFormat={(x) => \"\"} />\n                <VictoryLine style={{ labels: { textShadow: '1px 1px white', fontWeight: 'bold' }}} labels={() => \"\"} size={3} x=\"date\" y={`total_${currency}`} data={graphData} />\n            </VictoryChart>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport DailyCountInfo from './DailyCountInfo.js';\nimport MonthlyCountInfo from \"./MonthlyCountInfo.js\";\nimport DailyInfo from './DailyInfo.js';\nimport MonthlyInfo from './MonthlyInfo.js';\nimport AccDailyCountInfo from './AccDailyCountInfo.js';\nimport AccMonthlyCountInfo from \"./AccMonthlyCountInfo.js\";\nimport AccDailyInfo from './AccDailyInfo.js';\nimport AccMonthlyInfo from './AccMonthlyInfo.js';\n\nexport default function Infographic() {\n\n    const [cumuOption, setCumuOption] = useState('INDIVIDUAL');\n\n    return (\n        <div>\n            <div className=\"chart-type-toggle\">\n                Chart type: \n                <select value={cumuOption} onChange={e => setCumuOption(e.target.value)}>\n                    <option value=\"INDIVIDUAL\">Individual</option>\n                    <option value=\"CUMULATIVE\">Cumulative</option>\n                </select>\n            </div>\n            {\n                cumuOption === 'INDIVIDUAL' ? (\n                    <>\n                        <DailyCountInfo />\n                        <MonthlyCountInfo />\n                        <DailyInfo currency=\"HKD\"/>\n                        <MonthlyInfo currency=\"HKD\" />\n                        <DailyInfo currency=\"GBP\"/>\n                        <MonthlyInfo currency=\"GBP\" />\n                    </>\n                ) : (\n                    <>\n                        <AccDailyCountInfo />\n                        <AccMonthlyCountInfo />\n                        <AccDailyInfo currency=\"HKD\"/>\n                        <AccMonthlyInfo currency=\"HKD\" />\n                        <AccDailyInfo currency=\"GBP\"/>\n                        <AccMonthlyInfo currency=\"GBP\" />\n                    </>\n                )\n            }\n            \n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\n\nexport default function PageNotFound() {\n\n    useEffect(() => {\n        setTimeout(() => {\n            window.location.replace(`http://${window.location.href.split('//')[1].split('/')[0]}`);\n        }, 3000);\n    }, []);\n\n    return (\n        <div>\n            <div className=\"title\">404 Page Not Found</div>\n            <div className=\"desc\">The page you are trying to visit does not exist! Redirecting back to the homepage in three seconds...</div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Sidebar from './Sidebar.js';\nimport Home from './Home.js';\nimport Log from './Log.js';\nimport LogPage from './LogPage.js';\nimport Infographic from './charts/Infographic.js';\nimport PageNotFound from './PageNotFound.js';\nimport Cookies from 'universal-cookie';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const uIdContext = React.createContext('');\n\nconst cookies = new Cookies();\n\nfunction App() {\n\n  const [userId, setUserId] = useState('');\n\n  useEffect(() => {\n    if(!cookies.get('uid')){\n      cookies.set('uid', uuidv4(), { maxAge: 60*60*24*365*10 });\n    }\n    setUserId(cookies.get('uid'));\n  }, []);\n\n  return (\n    <Router>\n      <uIdContext.Provider value={userId}>\n      <div className=\"App\">\n        <Sidebar />\n        <div className=\"app-container\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/logs\" exact>\n            <LogPage />\n          </Route>\n          <Route path=\"/log/:logID\" exact>\n            <Log />\n          </Route>\n          <Route path=\"/info\" exact>\n            <Infographic />\n          </Route>\n          <Route path=\"/\">\n            <PageNotFound />\n          </Route>\n        </Switch>\n        </div>\n      </div>\n      <div className=\"footnote\">\n          <div>Exchange rates obtained from <code>exchangeratesapi.io</code></div>\n          <div>Powered by Node, Express, MongoDB, GraphQL, React, Apollo Client, and Victory Charts</div>  \n      </div>\n      </uIdContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:8000/graphql',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n      <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}